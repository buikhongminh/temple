version: 2.1
# Use a package of configuration called an orb.
orbs:
    # Choose either one of the orbs below
    # welcome: circleci/welcome-orb@0.4.1
    # aws-cli: circleci/aws-cli@2.0.3
# Define the jobs we want to run for this project
commands:
  # Exercise - Rollback
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-viet
jobs:
    # create_infrastructure:  # Choose any name, such as `build`
    #     # The primary container, where your job's commands will run
    #     docker:
    #       - image: amazon/aws-cli
    #     steps:
    #       - checkout 
    #       - run:
    #           name: 
    #           command: |
    #             apk add --update ansible
    configure_infrastructure:  # Choose any name, such as `build`
        # The primary container, where your job's commands will run
        docker:
          - image: python:3.7-alpine3.11
        steps:
          - checkout
          - add_ssh_keys:
              Fingerprint: ["c1:e7:aa:f3:f7:c1:f3:28:83:9f:70:75:8c:a6:df:6f"]
          - run:
              name: Install dependencies
              command: |
                apk add --update ansible
          - run:
              name: Configure server
              command: |
                ansible-playbook -i inventory main.yml

    create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-viet\
                --region us-east-1

    smoke_test:  # Choose any name, such as `build`
      docker:
        - image: alpine:latest
      steps:
        - run:
            name: Test Job
            command: |
              return 0
        - destroy_environment
        when: on_fail
  
# Sequential workflow
workflows:
    # Name the workflow
    myWorkflow:
      jobs:
        - create_infrastructure
        - smoke_test
        